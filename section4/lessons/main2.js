"getItems": "this.hitGetAddItemsEvent()",
const FastAverageColor=function(){"use strict";function _(t,r,e){return t[r]===e[0]&&t[r+1]===e[1]&&t[r+2]===e[2]&&t[r+3]===e[3]}function s(t,r,e){for(var o={},i=e.ignoredColor,n=0;n<r;n+=e.step){var a=t[n],s=t[n+1],h=t[n+2],u=t[n+3];if(!i||!_(t,n,i)){var d=Math.round(a/24)+","+Math.round(s/24)+","+Math.round(h/24);o[d]?o[d]=[o[d][0]+a*u,o[d][1]+s*u,o[d][2]+h*u,o[d][3]+u,o[d][4]+1]:o[d]=[a*u,s*u,h*u,u,1]}}var c=Object.keys(o).map(function(t){return o[t]}).sort(function(t,r){var e=t[4],o=r[4];return o<e?-1:e===o?0:1})[0],g=c[0],l=c[1],p=c[2],f=c[3],v=c[4];return f?[Math.round(g/f),Math.round(l/f),Math.round(p/f),Math.round(f/v)]:e.defaultColor}function h(t,r,e){for(var o=0,i=0,n=0,a=0,s=0,h=e.ignoredColor,u=0;u<r;u+=e.step){var d=t[u+3],c=t[u]*d,g=t[u+1]*d,l=t[u+2]*d;h&&_(t,u,h)||(o+=c,i+=g,n+=l,a+=d,s++)}return a?[Math.round(o/a),Math.round(i/a),Math.round(n/a),Math.round(a/s)]:e.defaultColor}function u(t,r,e){for(var o=0,i=0,n=0,a=0,s=0,h=e.ignoredColor,u=0;u<r;u+=e.step){var d=t[u],c=t[u+1],g=t[u+2],l=t[u+3];h&&_(t,u,h)||(o+=d*d*l,i+=c*c*l,n+=g*g*l,a+=l,s++)}return a?[Math.round(Math.sqrt(o/a)),Math.round(Math.sqrt(i/a)),Math.round(Math.sqrt(n/a)),Math.round(a/s)]:e.defaultColor}function t(){}var d="FastAverageColor: ";return t.prototype.getColorAsync=function(t,r){if(t){if("string"==typeof t)return this._bindImageEvents(new Image(t),r);if(t.complete){var e=this.getColor(t,r);return e.error?Promise.reject(e.error):Promise.resolve(e)}return this._bindImageEvents(t,r)}return Promise.reject(Error(d+"call .getColorAsync() without resource."))},t.prototype.getColor=function(r,e){e=e||{};var t=this._getDefaultColor(e),o=t;if(!r)return this._outputError(e,"call .getColor(null) without resource."),this._prepareResult(t);var i=this._getOriginalSize(r),n=this._prepareSizeAndPosition(i,e);if(!(n.srcWidth&&n.srcHeight&&n.destWidth&&n.destHeight))return this._outputError(e,'incorrect sizes for resource "'+r.src+'".'),this._prepareResult(t);if(!this._ctx&&(this._canvas=this._makeCanvas(),this._ctx=this._canvas.getContext&&this._canvas.getContext("2d"),!this._ctx))return this._outputError(e,"Canvas Context 2D is not supported in this browser."),this._prepareResult(t);this._canvas.width=n.destWidth,this._canvas.height=n.destHeight;try{this._ctx.clearRect(0,0,n.destWidth,n.destHeight),this._ctx.drawImage(r,n.srcLeft,n.srcTop,n.srcWidth,n.srcHeight,0,0,n.destWidth,n.destHeight);var a=this._ctx.getImageData(0,0,n.destWidth,n.destHeight).data;o=this.getColorFromArray4(a,e)}catch(t){this._outputError(e,"security error (CORS) for resource "+r.src+".\\nDetails: https://developer.mozilla.org/en/docs/Web/HTML/CORS_enabled_image",t)}return this._prepareResult(o)},t.prototype.getColorFromArray4=function(t,r){r=r||{};var e=t.length,o=this._getDefaultColor(r);if(e<4)return o;var i,n=e-e%4,a=4*(r.step||1);switch(r.algorithm||"sqrt"){case"simple":i=h;break;case"sqrt":i=u;break;case"dominant":i=s;break;default:throw Error(d+r.algorithm+" is unknown algorithm.")}return i(t,n,{defaultColor:o,ignoredColor:r.ignoredColor,step:a})},t.prototype.destroy=function(){delete this._canvas,delete this._ctx},t.prototype._getDefaultColor=function(t){return this._getOption(t,"defaultColor",[0,0,0,0])},t.prototype._getOption=function(t,r,e){return void 0===t[r]?e:t[r]},t.prototype._prepareSizeAndPosition=function(t,r){var e=this._getOption(r,"left",0),o=this._getOption(r,"top",0),i=this._getOption(r,"width",t.width),n=this._getOption(r,"height",t.height),a=i,s=n;if("precision"===r.mode)return{srcLeft:e,srcTop:o,srcWidth:i,srcHeight:n,destWidth:a,destHeight:s};var h;return n<i?(h=i/n,a=100,s=Math.round(a/h)):(h=n/i,s=100,a=Math.round(s/h)),(i<a||n<s||a<10||s<10)&&(a=i,s=n),{srcLeft:e,srcTop:o,srcWidth:i,srcHeight:n,destWidth:a,destHeight:s}},t.prototype._bindImageEvents=function(a,s){var h=this;return new Promise(function(r,e){function t(){n();var t=h.getColor(a,s);t.error?e(t.error):r(t)}function o(){n(),e(Error(d+"Error loading image "+a.src+"."))}function i(){n(),e(Error(d+'Image "'+a.src+'" loading aborted.'))}var n=function(){a.removeEventListener("load",t),a.removeEventListener("error",o),a.removeEventListener("abort",i)};a.addEventListener("load",t),a.addEventListener("error",o),a.addEventListener("abort",i)})},t.prototype._prepareResult=function(t){var r=t.slice(0,3),e=[].concat(r,t[3]/255),o=this._isDark(t);return{value:t,rgb:"rgb("+r.join(",")+")",rgba:"rgba("+e.join(",")+")",hex:this._arrayToHex(r),hexa:this._arrayToHex(t),isDark:o,isLight:!o}},t.prototype._getOriginalSize=function(t){return t instanceof HTMLImageElement?{width:t.naturalWidth,height:t.naturalHeight}:t instanceof HTMLVideoElement?{width:t.videoWidth,height:t.videoHeight}:{width:t.width,height:t.height}},t.prototype._toHex=function(t){var r=t.toString(16);return 1===r.length?"0"+r:r},t.prototype._arrayToHex=function(t){return"#"+t.map(this._toHex).join("")},t.prototype._isDark=function(t){return(299*t[0]+587*t[1]+114*t[2])/1e3<128},t.prototype._makeCanvas=function(){return"undefined"==typeof window?new OffscreenCanvas(1,1):document.createElement("canvas")},t.prototype._outputError=function(t,r,e){t.silent||(console.error(d+r),e&&console.error(e))},t}();
const hey = this.vNode.el.querySelectorAll('a');
const fac = new FastAverageColor();
hey.forEach(function (item) {
 let image = item.querySelector('img');
 let blockBg = item.childNodes[1].firstElementChild;
 let blockBgImage = image.parentElement;

 console.log(image, blockBg, blockBgImage);

 image.addEventListener('load', function () {
   let size = 20;
   let width = image.naturalWidth;
   let height = image.naturalHeight;
   let newColor = fac.getColor(image);
   let newColorBottom = fac.getColor(image, {top: height - size, height: size});
   blockBg.style.background = 'linear-gradient(transparent, rgba(' + newColorBottom.value[0] + ', ' + newColorBottom.value[1] + ', ' + newColorBottom.value[2] + ', 0.25) 15%, rgba(' + newColorBottom.value[0] + ', ' + newColorBottom.value[1] + ', ' + newColorBottom.value[2] + ', 0.85) 50%, rgb(' + newColorBottom.value[0] + ', ' + newColorBottom.value[1] + ', ' + newColorBottom.value[2] + ') 75%)';
   blockBgImage.style.background = 'rgba(' + newColorBottom.value[0] + ', ' + newColorBottom.value[1] + ', ' + newColorBottom.value[2] + ', 0.4)';
   blockBg.style.color = newColorBottom.isDark ? '#fff' : '#000';
 }, false);
});